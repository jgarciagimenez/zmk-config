/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define NAV_L 1
#define OTH_L 2
#define NUM_L 3
#define SYM_L 4
#define FUN_L 5

&lt { quick_tap_ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };     
        combo_lpar {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp LPAR>;
        };  

        combo_bspc {
            timeout-ms = <50>;
            key-positions = <4 5>;
            bindings = <&kp BSPC>;
        };  

        combo_eql {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp EQUAL>;
        }; 
        combo_plus {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp PLUS>;
        }; 
        combo_rpar {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp RPAR>;
        };  
        combo_bs_left {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp LC(BSPC)>;
        }; 
        combo_bs {
            timeout-ms = <50>;
            key-positions = <9 10>;
            bindings = <&kp BSPC>;
        }; 
        combo_minus {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&mt LS(MINUS) MINUS>;
        };  
        combo_underscore {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp UNDER>;
        };  
        combo_pipe {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp PIPE>;
        };  
        combo_bslash {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&kp BSLH>;
        };  
        combo_cut {
            timeout-ms = <50>;
            key-positions = <25 26>;
            bindings = <&kp LC(X)>;
        };  
        combo_copy {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp LC(C)>;
        };  
        combo_paste {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&mt LS(LC(V)) LC(V)>;
        }; 
    };
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {

// -------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   BKSP    |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |    '      |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT(RET) |
//                         | ALT | LWR | SPC | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &hm LGUI A &hm LALT S &hm LSHIFT D &hm LCTRL F &kp G &kp H &hm LCTRL J  &hm LSHIFT K  &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &mt LS(COMMA) COMMA &mt LS(DOT) DOT &mt QUESTION FSLH &mt RSHFT RET
                        &mt LALT LC(V)  &lt NAV_L SPACE &mt LSHFT TAB &lt NUM_L RET  &kp BSPC
                        >;
                };

                nav_layer {

                         bindings = <
   &trans &trans  &trans &trans &trans &trans     &trans  &trans &trans &trans  &kp PSCRN  &kp DEL
   &trans &trans  &trans &trans &trans &trans     &kp HOME &kp LEFT  &kp DOWN &kp UP  &kp RIGHT &trans
   &trans &trans  &trans &trans &trans &trans     &trans  &kp END  &kp PG_UP &kp PG_DN &trans &trans 
                           &trans  &trans   &kp TAB   &lt OTH_L RET  &kp DEL 
                        >;
                };
// -----------------------------------------------S-----------------------------------
// |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |    DEL    |
// |    |  _  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |     ~     |
// |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(RET) |
//                       |     |     | RET | ADJ |     |

//                         bindings = <
//    &trans &kp EXCL  &kp AT      &kp HASH &kp DLLR &kp PRCNT      &kp CARET &kp AMPS &kp N8    &kp LPAR  &kp RPAR  &kp DEL
//    &trans &kp MINUS &kp KP_PLUS &kp LBRC &kp RBRC &kp PIPE       &kp LEFT  &kp DOWN &kp UP    &kp RIGHT &kp GRAVE &kp GRAVE
//    &trans &kp ESC   &kp LGUI    &kp LALT &kp CLCK &kp SQT        &kp HOME  &kp END  &kp PG_UP &kp PG_DN &kp PSCRN &mt RSHFT RET
//                                  &trans      &trans       &kp RET        &mo 3       &trans
//                         >;
//                 };


                other_layer {
// -----------------------------------------------------------------------------------------
// | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
// | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI+ |    |         |   |       |     |     |     |     |        |
// |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
//                                              |     |     |     |     |     |
                        bindings = <
   &none           &none           &none           &none           &none &none    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
   &none           &none           &none           &none           &none &none              &none        &none        &none        &none        &none        &none
   &none           &none           &none           &none           &none &none              &reset       &none        &none        &none        &bootloader        &none
                                                             &trans      &trans       &trans        &trans      &trans
                        >;
                };


                num_layer {
// -----------------------------------------------------------------------------------------
// |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
// |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
// |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
//                       |     | ADJ | BKSP |    |     |
                        bindings = <
   &kp GRAVE &kp N1  &kp N2 &kp N3 &kp N4 &kp N5        &kp N6         &kp N7    &kp N8    &kp N9    &kp N0     &kp DEL
   &kp TILDE &kp LS(N1)  &kp LS(N2) &kp LS(N3) &kp LS(N4) &kp LS(N5)        &kp LS(N6)         &kp LS(N7)    &kp LS(N8)    &kp LS(N9)    &kp LS(N0)    &none
   &trans &trans  &trans &trans &kp LBRC &kp LBKT         &kp RBKT &kp RBRC  &trans &trans &trans &trans
                           &trans      &trans        &trans &trans  &trans 
                        >;
                };



//                 num_layer {
// // -----------------------------------------------------------------------------------------
// // |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
// // |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
// // |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
// //                       |     | ADJ | BKSP |    |     |
//                         bindings = <
//    &trans &trans  &trans &trans &trans &trans        &kp LBKT         &kp N7    &kp N8    &kp N9    &kp RBKT     &kp BSPC
//    &trans &trans  &trans &trans &trans &trans        &kp EQUAL        &kp N4    &kp N5    &kp N6    &kp COLON    &none
//    &trans &trans  &trans &trans &trans &trans        &kp BACKSLASH    &kp N1    &kp N2    &kp N3    &kp GRAVE    &none
//                            &trans      &trans        &kp MINUS         &kp N0      &kp DOT
//                         >;
//                 };

//                 sym_layer {
// // -----------------------------------------------------------------------------------------
// // |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
// // |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
// // |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
// //                       |     | ADJ | BKSP |    |     |
//                         bindings = <
//     &trans &kp LBRC       &kp LS(N7)    &kp LS(N8)    &kp LS(N9) &kp RBRC          &trans &trans  &trans &trans &trans &trans 
//     &trans &kp COLON      &kp LS(N4)    &kp LS(N5)    &kp LS(N6) &kp EQUAL         &trans &trans  &trans &trans &trans &trans
//     &trans &kp GRAVE      &kp LS(N1)    &kp LS(N2)    &kp LS(N3) &kp PIPE          &trans &trans  &trans &trans &trans &trans
//                                  &kp DOT      &kp LS(N0)      &kp UNDER           &trans &trans

//                         >;
//                 };
        };
};
